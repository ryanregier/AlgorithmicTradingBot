{"ast":null,"code":"'use strict';\n\nrequire('dotenv').config();\n\nconst api = require('./api');\n\nconst account = require('./resources/account');\n\nconst position = require('./resources/position');\n\nconst calendar = require('./resources/calendar');\n\nconst clock = require('./resources/clock');\n\nconst asset = require('./resources/asset');\n\nconst order = require('./resources/order');\n\nconst data = require('./resources/data');\n\nconst watchlist = require('./resources/watchlist');\n\nconst polygon = require('./resources/polygon');\n\nconst websockets = require('./resources/websockets');\n\nfunction Alpaca(config = {}) {\n  this.configuration = {\n    baseUrl: config.baseUrl || process.env.APCA_API_BASE_URL || (config.paper ? 'https://paper-api.alpaca.markets' : 'https://api.alpaca.markets'),\n    dataBaseUrl: config.dataBaseUrl || process.env.APCA_DATA_BASE_URL || process.env.DATA_PROXY_WS || 'https://data.alpaca.markets',\n    polygonBaseUrl: config.polygonBaseUrl || process.env.POLYGON_API_BASE_URL || 'https://api.polygon.io',\n    keyId: config.keyId || process.env.APCA_API_KEY_ID || '',\n    secretKey: config.secretKey || process.env.APCA_API_SECRET_KEY || '',\n    apiVersion: config.apiVersion || process.env.APCA_API_VERSION || 'v2',\n    oauth: config.oauth || process.env.APCA_API_OAUTH || '',\n    usePolygon: config.usePolygon ? true : false // should we use polygon\n    // data or alpaca data\n\n  };\n  this.data_ws = new websockets.AlpacaStreamClient({\n    url: this.configuration.usePolygon ? this.configuration.baseUrl : this.configuration.dataBaseUrl,\n    apiKey: this.configuration.keyId,\n    secretKey: this.configuration.secretKey,\n    oauth: this.configuration.oauth,\n    usePolygon: this.configuration.usePolygon\n  });\n  this.data_ws.STATE = websockets.STATE;\n  this.data_ws.EVENT = websockets.EVENT;\n  this.data_ws.ERROR = websockets.ERROR;\n  this.trade_ws = new websockets.AlpacaStreamClient({\n    url: this.configuration.baseUrl,\n    apiKey: this.configuration.keyId,\n    secretKey: this.configuration.secretKey,\n    oauth: this.configuration.oauth,\n    usePolygon: this.configuration.usePolygon\n  });\n  this.trade_ws.STATE = websockets.STATE;\n  this.trade_ws.EVENT = websockets.EVENT;\n  this.trade_ws.ERROR = websockets.ERROR;\n} // Helper methods\n\n\nAlpaca.prototype.httpRequest = api.httpRequest;\nAlpaca.prototype.dataHttpRequest = api.dataHttpRequest;\nAlpaca.prototype.polygonHttpRequest = api.polygonHttpRequest; // Account\n\nAlpaca.prototype.getAccount = account.get;\nAlpaca.prototype.updateAccountConfigurations = account.updateConfigs;\nAlpaca.prototype.getAccountConfigurations = account.getConfigs;\nAlpaca.prototype.getAccountActivities = account.getActivities;\nAlpaca.prototype.getPortfolioHistory = account.getPortfolioHistory; // Positions\n\nAlpaca.prototype.getPositions = position.getAll;\nAlpaca.prototype.getPosition = position.getOne;\nAlpaca.prototype.closeAllPositions = position.closeAll;\nAlpaca.prototype.closePosition = position.closeOne; // Calendar\n\nAlpaca.prototype.getCalendar = calendar.get; // Clock\n\nAlpaca.prototype.getClock = clock.get; // Asset\n\nAlpaca.prototype.getAssets = asset.getAll;\nAlpaca.prototype.getAsset = asset.getOne; // Order\n\nAlpaca.prototype.getOrders = order.getAll;\nAlpaca.prototype.getOrder = order.getOne;\nAlpaca.prototype.getOrderByClientId = order.getByClientOrderId;\nAlpaca.prototype.createOrder = order.post;\nAlpaca.prototype.replaceOrder = order.patchOrder;\nAlpaca.prototype.cancelOrder = order.cancel;\nAlpaca.prototype.cancelAllOrders = order.cancelAll; // Data\n\nAlpaca.prototype.getAggregates = data.getAggregates;\nAlpaca.prototype.getBars = data.getBars;\nAlpaca.prototype.lastTrade = data.getLastTrade; // getLastTrade is already preserved for polygon\n\nAlpaca.prototype.lastQuote = data.getLastQuote; // getLastQuote is already preserved for polygon\n// Watchlists\n\nAlpaca.prototype.getWatchlists = watchlist.getAll;\nAlpaca.prototype.getWatchlist = watchlist.getOne;\nAlpaca.prototype.addWatchlist = watchlist.addWatchlist;\nAlpaca.prototype.addToWatchlist = watchlist.addToWatchlist;\nAlpaca.prototype.updateWatchlist = watchlist.updateWatchlist;\nAlpaca.prototype.deleteWatchlist = watchlist.deleteWatchlist;\nAlpaca.prototype.deleteFromWatchlist = watchlist.deleteFromWatchlist; // Polygon\n\nAlpaca.prototype.getExchanges = polygon.exchanges;\nAlpaca.prototype.getSymbolTypeMap = polygon.symbolTypeMap;\nAlpaca.prototype.getHistoricTradesV2 = polygon.historicTradesV2;\nAlpaca.prototype.getHistoricQuotesV2 = polygon.historicQuotesV2;\nAlpaca.prototype.getHistoricAggregatesV2 = polygon.historicAggregatesV2;\nAlpaca.prototype.getLastTrade = polygon.lastTrade;\nAlpaca.prototype.getLastQuote = polygon.lastQuote;\nAlpaca.prototype.getConditionMap = polygon.conditionMap;\nAlpaca.prototype.getCompany = polygon.company;\nAlpaca.prototype.getAnalysts = polygon.analysts;\nAlpaca.prototype.getDividends = polygon.dividends;\nAlpaca.prototype.getEarnings = polygon.earnings;\nAlpaca.prototype.getFinancials = polygon.financials;\nAlpaca.prototype.getSplits = polygon.splits;\nAlpaca.prototype.getNews = polygon.news;\nAlpaca.prototype.getSymbol = polygon.getSymbol;\nmodule.exports = Alpaca;","map":{"version":3,"sources":["D:/Desktop - Data/School/Stock Bot/AlgorithmicTradingBot/frontend-server/node_modules/@alpacahq/alpaca-trade-api/lib/alpaca-trade-api.js"],"names":["require","config","api","account","position","calendar","clock","asset","order","data","watchlist","polygon","websockets","Alpaca","configuration","baseUrl","process","env","APCA_API_BASE_URL","paper","dataBaseUrl","APCA_DATA_BASE_URL","DATA_PROXY_WS","polygonBaseUrl","POLYGON_API_BASE_URL","keyId","APCA_API_KEY_ID","secretKey","APCA_API_SECRET_KEY","apiVersion","APCA_API_VERSION","oauth","APCA_API_OAUTH","usePolygon","data_ws","AlpacaStreamClient","url","apiKey","STATE","EVENT","ERROR","trade_ws","prototype","httpRequest","dataHttpRequest","polygonHttpRequest","getAccount","get","updateAccountConfigurations","updateConfigs","getAccountConfigurations","getConfigs","getAccountActivities","getActivities","getPortfolioHistory","getPositions","getAll","getPosition","getOne","closeAllPositions","closeAll","closePosition","closeOne","getCalendar","getClock","getAssets","getAsset","getOrders","getOrder","getOrderByClientId","getByClientOrderId","createOrder","post","replaceOrder","patchOrder","cancelOrder","cancel","cancelAllOrders","cancelAll","getAggregates","getBars","lastTrade","getLastTrade","lastQuote","getLastQuote","getWatchlists","getWatchlist","addWatchlist","addToWatchlist","updateWatchlist","deleteWatchlist","deleteFromWatchlist","getExchanges","exchanges","getSymbolTypeMap","symbolTypeMap","getHistoricTradesV2","historicTradesV2","getHistoricQuotesV2","historicQuotesV2","getHistoricAggregatesV2","historicAggregatesV2","getConditionMap","conditionMap","getCompany","company","getAnalysts","analysts","getDividends","dividends","getEarnings","earnings","getFinancials","financials","getSplits","splits","getNews","news","getSymbol","module","exports"],"mappings":"AAAA;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAMC,GAAG,GAAGF,OAAO,CAAC,OAAD,CAAnB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,qBAAD,CAAvB;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,sBAAD,CAAxB;;AACA,MAAMK,QAAQ,GAAGL,OAAO,CAAC,sBAAD,CAAxB;;AACA,MAAMM,KAAK,GAAGN,OAAO,CAAC,mBAAD,CAArB;;AACA,MAAMO,KAAK,GAAGP,OAAO,CAAC,mBAAD,CAArB;;AACA,MAAMQ,KAAK,GAAGR,OAAO,CAAC,mBAAD,CAArB;;AACA,MAAMS,IAAI,GAAGT,OAAO,CAAC,kBAAD,CAApB;;AACA,MAAMU,SAAS,GAAGV,OAAO,CAAC,uBAAD,CAAzB;;AACA,MAAMW,OAAO,GAAGX,OAAO,CAAC,qBAAD,CAAvB;;AAEA,MAAMY,UAAU,GAAGZ,OAAO,CAAC,wBAAD,CAA1B;;AAEA,SAASa,MAAT,CAAgBZ,MAAM,GAAG,EAAzB,EAA6B;AAC3B,OAAKa,aAAL,GAAqB;AACnBC,IAAAA,OAAO,EAAEd,MAAM,CAACc,OAAP,IAAkBC,OAAO,CAACC,GAAR,CAAYC,iBAA9B,KACHjB,MAAM,CAACkB,KAAP,GAAe,kCAAf,GAAoD,4BADjD,CADU;AAGnBC,IAAAA,WAAW,EAAEnB,MAAM,CAACmB,WAAP,IAAsBJ,OAAO,CAACC,GAAR,CAAYI,kBAAlC,IAAwDL,OAAO,CAACC,GAAR,CAAYK,aAApE,IAAqF,6BAH/E;AAInBC,IAAAA,cAAc,EAAEtB,MAAM,CAACsB,cAAP,IAAyBP,OAAO,CAACC,GAAR,CAAYO,oBAArC,IAA6D,wBAJ1D;AAKnBC,IAAAA,KAAK,EAAExB,MAAM,CAACwB,KAAP,IAAgBT,OAAO,CAACC,GAAR,CAAYS,eAA5B,IAA+C,EALnC;AAMnBC,IAAAA,SAAS,EAAE1B,MAAM,CAAC0B,SAAP,IAAoBX,OAAO,CAACC,GAAR,CAAYW,mBAAhC,IAAuD,EAN/C;AAOnBC,IAAAA,UAAU,EAAE5B,MAAM,CAAC4B,UAAP,IAAqBb,OAAO,CAACC,GAAR,CAAYa,gBAAjC,IAAqD,IAP9C;AAQnBC,IAAAA,KAAK,EAAE9B,MAAM,CAAC8B,KAAP,IAAgBf,OAAO,CAACC,GAAR,CAAYe,cAA5B,IAA8C,EARlC;AASnBC,IAAAA,UAAU,EAAEhC,MAAM,CAACgC,UAAP,GAAoB,IAApB,GAA2B,KATpB,CAS2B;AACA;;AAV3B,GAArB;AAYA,OAAKC,OAAL,GAAe,IAAItB,UAAU,CAACuB,kBAAf,CAAkC;AAC/CC,IAAAA,GAAG,EAAE,KAAKtB,aAAL,CAAmBmB,UAAnB,GAAgC,KAAKnB,aAAL,CAAmBC,OAAnD,GAA6D,KAAKD,aAAL,CAAmBM,WADtC;AAE/CiB,IAAAA,MAAM,EAAE,KAAKvB,aAAL,CAAmBW,KAFoB;AAG/CE,IAAAA,SAAS,EAAE,KAAKb,aAAL,CAAmBa,SAHiB;AAI/CI,IAAAA,KAAK,EAAE,KAAKjB,aAAL,CAAmBiB,KAJqB;AAK/CE,IAAAA,UAAU,EAAE,KAAKnB,aAAL,CAAmBmB;AALgB,GAAlC,CAAf;AAOA,OAAKC,OAAL,CAAaI,KAAb,GAAqB1B,UAAU,CAAC0B,KAAhC;AACA,OAAKJ,OAAL,CAAaK,KAAb,GAAqB3B,UAAU,CAAC2B,KAAhC;AACA,OAAKL,OAAL,CAAaM,KAAb,GAAqB5B,UAAU,CAAC4B,KAAhC;AAEA,OAAKC,QAAL,GAAgB,IAAI7B,UAAU,CAACuB,kBAAf,CAAkC;AAChDC,IAAAA,GAAG,EAAE,KAAKtB,aAAL,CAAmBC,OADwB;AAEhDsB,IAAAA,MAAM,EAAE,KAAKvB,aAAL,CAAmBW,KAFqB;AAGhDE,IAAAA,SAAS,EAAE,KAAKb,aAAL,CAAmBa,SAHkB;AAIhDI,IAAAA,KAAK,EAAE,KAAKjB,aAAL,CAAmBiB,KAJsB;AAKhDE,IAAAA,UAAU,EAAE,KAAKnB,aAAL,CAAmBmB;AALiB,GAAlC,CAAhB;AAOA,OAAKQ,QAAL,CAAcH,KAAd,GAAsB1B,UAAU,CAAC0B,KAAjC;AACA,OAAKG,QAAL,CAAcF,KAAd,GAAsB3B,UAAU,CAAC2B,KAAjC;AACA,OAAKE,QAAL,CAAcD,KAAd,GAAsB5B,UAAU,CAAC4B,KAAjC;AACD,C,CAED;;;AACA3B,MAAM,CAAC6B,SAAP,CAAiBC,WAAjB,GAA+BzC,GAAG,CAACyC,WAAnC;AACA9B,MAAM,CAAC6B,SAAP,CAAiBE,eAAjB,GAAmC1C,GAAG,CAAC0C,eAAvC;AACA/B,MAAM,CAAC6B,SAAP,CAAiBG,kBAAjB,GAAsC3C,GAAG,CAAC2C,kBAA1C,C,CAEA;;AACAhC,MAAM,CAAC6B,SAAP,CAAiBI,UAAjB,GAA8B3C,OAAO,CAAC4C,GAAtC;AACAlC,MAAM,CAAC6B,SAAP,CAAiBM,2BAAjB,GAA+C7C,OAAO,CAAC8C,aAAvD;AACApC,MAAM,CAAC6B,SAAP,CAAiBQ,wBAAjB,GAA4C/C,OAAO,CAACgD,UAApD;AACAtC,MAAM,CAAC6B,SAAP,CAAiBU,oBAAjB,GAAwCjD,OAAO,CAACkD,aAAhD;AACAxC,MAAM,CAAC6B,SAAP,CAAiBY,mBAAjB,GAAuCnD,OAAO,CAACmD,mBAA/C,C,CAEA;;AACAzC,MAAM,CAAC6B,SAAP,CAAiBa,YAAjB,GAAgCnD,QAAQ,CAACoD,MAAzC;AACA3C,MAAM,CAAC6B,SAAP,CAAiBe,WAAjB,GAA+BrD,QAAQ,CAACsD,MAAxC;AACA7C,MAAM,CAAC6B,SAAP,CAAiBiB,iBAAjB,GAAqCvD,QAAQ,CAACwD,QAA9C;AACA/C,MAAM,CAAC6B,SAAP,CAAiBmB,aAAjB,GAAiCzD,QAAQ,CAAC0D,QAA1C,C,CAEA;;AACAjD,MAAM,CAAC6B,SAAP,CAAiBqB,WAAjB,GAA+B1D,QAAQ,CAAC0C,GAAxC,C,CAEA;;AACAlC,MAAM,CAAC6B,SAAP,CAAiBsB,QAAjB,GAA4B1D,KAAK,CAACyC,GAAlC,C,CAEA;;AACAlC,MAAM,CAAC6B,SAAP,CAAiBuB,SAAjB,GAA6B1D,KAAK,CAACiD,MAAnC;AACA3C,MAAM,CAAC6B,SAAP,CAAiBwB,QAAjB,GAA4B3D,KAAK,CAACmD,MAAlC,C,CAEA;;AACA7C,MAAM,CAAC6B,SAAP,CAAiByB,SAAjB,GAA6B3D,KAAK,CAACgD,MAAnC;AACA3C,MAAM,CAAC6B,SAAP,CAAiB0B,QAAjB,GAA4B5D,KAAK,CAACkD,MAAlC;AACA7C,MAAM,CAAC6B,SAAP,CAAiB2B,kBAAjB,GAAsC7D,KAAK,CAAC8D,kBAA5C;AACAzD,MAAM,CAAC6B,SAAP,CAAiB6B,WAAjB,GAA+B/D,KAAK,CAACgE,IAArC;AACA3D,MAAM,CAAC6B,SAAP,CAAiB+B,YAAjB,GAAgCjE,KAAK,CAACkE,UAAtC;AACA7D,MAAM,CAAC6B,SAAP,CAAiBiC,WAAjB,GAA+BnE,KAAK,CAACoE,MAArC;AACA/D,MAAM,CAAC6B,SAAP,CAAiBmC,eAAjB,GAAmCrE,KAAK,CAACsE,SAAzC,C,CAEA;;AACAjE,MAAM,CAAC6B,SAAP,CAAiBqC,aAAjB,GAAiCtE,IAAI,CAACsE,aAAtC;AACAlE,MAAM,CAAC6B,SAAP,CAAiBsC,OAAjB,GAA2BvE,IAAI,CAACuE,OAAhC;AACAnE,MAAM,CAAC6B,SAAP,CAAiBuC,SAAjB,GAA6BxE,IAAI,CAACyE,YAAlC,C,CAAgD;;AAChDrE,MAAM,CAAC6B,SAAP,CAAiByC,SAAjB,GAA6B1E,IAAI,CAAC2E,YAAlC,C,CAAgD;AAEhD;;AACAvE,MAAM,CAAC6B,SAAP,CAAiB2C,aAAjB,GAAiC3E,SAAS,CAAC8C,MAA3C;AACA3C,MAAM,CAAC6B,SAAP,CAAiB4C,YAAjB,GAAgC5E,SAAS,CAACgD,MAA1C;AACA7C,MAAM,CAAC6B,SAAP,CAAiB6C,YAAjB,GAAgC7E,SAAS,CAAC6E,YAA1C;AACA1E,MAAM,CAAC6B,SAAP,CAAiB8C,cAAjB,GAAkC9E,SAAS,CAAC8E,cAA5C;AACA3E,MAAM,CAAC6B,SAAP,CAAiB+C,eAAjB,GAAmC/E,SAAS,CAAC+E,eAA7C;AACA5E,MAAM,CAAC6B,SAAP,CAAiBgD,eAAjB,GAAmChF,SAAS,CAACgF,eAA7C;AACA7E,MAAM,CAAC6B,SAAP,CAAiBiD,mBAAjB,GAAuCjF,SAAS,CAACiF,mBAAjD,C,CAEA;;AACA9E,MAAM,CAAC6B,SAAP,CAAiBkD,YAAjB,GAAgCjF,OAAO,CAACkF,SAAxC;AACAhF,MAAM,CAAC6B,SAAP,CAAiBoD,gBAAjB,GAAoCnF,OAAO,CAACoF,aAA5C;AACAlF,MAAM,CAAC6B,SAAP,CAAiBsD,mBAAjB,GAAuCrF,OAAO,CAACsF,gBAA/C;AACApF,MAAM,CAAC6B,SAAP,CAAiBwD,mBAAjB,GAAuCvF,OAAO,CAACwF,gBAA/C;AACAtF,MAAM,CAAC6B,SAAP,CAAiB0D,uBAAjB,GAA2CzF,OAAO,CAAC0F,oBAAnD;AACAxF,MAAM,CAAC6B,SAAP,CAAiBwC,YAAjB,GAAgCvE,OAAO,CAACsE,SAAxC;AACApE,MAAM,CAAC6B,SAAP,CAAiB0C,YAAjB,GAAgCzE,OAAO,CAACwE,SAAxC;AACAtE,MAAM,CAAC6B,SAAP,CAAiB4D,eAAjB,GAAmC3F,OAAO,CAAC4F,YAA3C;AACA1F,MAAM,CAAC6B,SAAP,CAAiB8D,UAAjB,GAA8B7F,OAAO,CAAC8F,OAAtC;AACA5F,MAAM,CAAC6B,SAAP,CAAiBgE,WAAjB,GAA+B/F,OAAO,CAACgG,QAAvC;AACA9F,MAAM,CAAC6B,SAAP,CAAiBkE,YAAjB,GAAgCjG,OAAO,CAACkG,SAAxC;AACAhG,MAAM,CAAC6B,SAAP,CAAiBoE,WAAjB,GAA+BnG,OAAO,CAACoG,QAAvC;AACAlG,MAAM,CAAC6B,SAAP,CAAiBsE,aAAjB,GAAiCrG,OAAO,CAACsG,UAAzC;AACApG,MAAM,CAAC6B,SAAP,CAAiBwE,SAAjB,GAA6BvG,OAAO,CAACwG,MAArC;AACAtG,MAAM,CAAC6B,SAAP,CAAiB0E,OAAjB,GAA2BzG,OAAO,CAAC0G,IAAnC;AACAxG,MAAM,CAAC6B,SAAP,CAAiB4E,SAAjB,GAA6B3G,OAAO,CAAC2G,SAArC;AAEAC,MAAM,CAACC,OAAP,GAAiB3G,MAAjB","sourcesContent":["'use strict'\n\nrequire('dotenv').config()\n\nconst api = require('./api')\nconst account = require('./resources/account')\nconst position = require('./resources/position')\nconst calendar = require('./resources/calendar')\nconst clock = require('./resources/clock')\nconst asset = require('./resources/asset')\nconst order = require('./resources/order')\nconst data = require('./resources/data')\nconst watchlist = require('./resources/watchlist')\nconst polygon = require('./resources/polygon')\n\nconst websockets = require('./resources/websockets')\n\nfunction Alpaca(config = {}) {\n  this.configuration = {\n    baseUrl: config.baseUrl || process.env.APCA_API_BASE_URL\n      || (config.paper ? 'https://paper-api.alpaca.markets' : 'https://api.alpaca.markets'),\n    dataBaseUrl: config.dataBaseUrl || process.env.APCA_DATA_BASE_URL || process.env.DATA_PROXY_WS || 'https://data.alpaca.markets',\n    polygonBaseUrl: config.polygonBaseUrl || process.env.POLYGON_API_BASE_URL || 'https://api.polygon.io',\n    keyId: config.keyId || process.env.APCA_API_KEY_ID || '',\n    secretKey: config.secretKey || process.env.APCA_API_SECRET_KEY || '',\n    apiVersion: config.apiVersion || process.env.APCA_API_VERSION || 'v2',\n    oauth: config.oauth || process.env.APCA_API_OAUTH || '',\n    usePolygon: config.usePolygon ? true : false, // should we use polygon\n                                                  // data or alpaca data\n  }\n  this.data_ws = new websockets.AlpacaStreamClient({\n    url: this.configuration.usePolygon ? this.configuration.baseUrl : this.configuration.dataBaseUrl,\n    apiKey: this.configuration.keyId,\n    secretKey: this.configuration.secretKey,\n    oauth: this.configuration.oauth,\n    usePolygon: this.configuration.usePolygon\n  })\n  this.data_ws.STATE = websockets.STATE\n  this.data_ws.EVENT = websockets.EVENT\n  this.data_ws.ERROR = websockets.ERROR\n\n  this.trade_ws = new websockets.AlpacaStreamClient({\n    url: this.configuration.baseUrl,\n    apiKey: this.configuration.keyId,\n    secretKey: this.configuration.secretKey,\n    oauth: this.configuration.oauth,\n    usePolygon: this.configuration.usePolygon\n  })\n  this.trade_ws.STATE = websockets.STATE\n  this.trade_ws.EVENT = websockets.EVENT\n  this.trade_ws.ERROR = websockets.ERROR\n}\n\n// Helper methods\nAlpaca.prototype.httpRequest = api.httpRequest\nAlpaca.prototype.dataHttpRequest = api.dataHttpRequest\nAlpaca.prototype.polygonHttpRequest = api.polygonHttpRequest\n\n// Account\nAlpaca.prototype.getAccount = account.get\nAlpaca.prototype.updateAccountConfigurations = account.updateConfigs\nAlpaca.prototype.getAccountConfigurations = account.getConfigs\nAlpaca.prototype.getAccountActivities = account.getActivities\nAlpaca.prototype.getPortfolioHistory = account.getPortfolioHistory\n\n// Positions\nAlpaca.prototype.getPositions = position.getAll\nAlpaca.prototype.getPosition = position.getOne\nAlpaca.prototype.closeAllPositions = position.closeAll\nAlpaca.prototype.closePosition = position.closeOne\n\n// Calendar\nAlpaca.prototype.getCalendar = calendar.get\n\n// Clock\nAlpaca.prototype.getClock = clock.get\n\n// Asset\nAlpaca.prototype.getAssets = asset.getAll\nAlpaca.prototype.getAsset = asset.getOne\n\n// Order\nAlpaca.prototype.getOrders = order.getAll\nAlpaca.prototype.getOrder = order.getOne\nAlpaca.prototype.getOrderByClientId = order.getByClientOrderId\nAlpaca.prototype.createOrder = order.post\nAlpaca.prototype.replaceOrder = order.patchOrder\nAlpaca.prototype.cancelOrder = order.cancel\nAlpaca.prototype.cancelAllOrders = order.cancelAll\n\n// Data\nAlpaca.prototype.getAggregates = data.getAggregates\nAlpaca.prototype.getBars = data.getBars\nAlpaca.prototype.lastTrade = data.getLastTrade  // getLastTrade is already preserved for polygon\nAlpaca.prototype.lastQuote = data.getLastQuote  // getLastQuote is already preserved for polygon\n\n// Watchlists\nAlpaca.prototype.getWatchlists = watchlist.getAll\nAlpaca.prototype.getWatchlist = watchlist.getOne\nAlpaca.prototype.addWatchlist = watchlist.addWatchlist\nAlpaca.prototype.addToWatchlist = watchlist.addToWatchlist\nAlpaca.prototype.updateWatchlist = watchlist.updateWatchlist\nAlpaca.prototype.deleteWatchlist = watchlist.deleteWatchlist\nAlpaca.prototype.deleteFromWatchlist = watchlist.deleteFromWatchlist\n\n// Polygon\nAlpaca.prototype.getExchanges = polygon.exchanges\nAlpaca.prototype.getSymbolTypeMap = polygon.symbolTypeMap\nAlpaca.prototype.getHistoricTradesV2 = polygon.historicTradesV2\nAlpaca.prototype.getHistoricQuotesV2 = polygon.historicQuotesV2\nAlpaca.prototype.getHistoricAggregatesV2 = polygon.historicAggregatesV2\nAlpaca.prototype.getLastTrade = polygon.lastTrade\nAlpaca.prototype.getLastQuote = polygon.lastQuote\nAlpaca.prototype.getConditionMap = polygon.conditionMap\nAlpaca.prototype.getCompany = polygon.company\nAlpaca.prototype.getAnalysts = polygon.analysts\nAlpaca.prototype.getDividends = polygon.dividends\nAlpaca.prototype.getEarnings = polygon.earnings\nAlpaca.prototype.getFinancials = polygon.financials\nAlpaca.prototype.getSplits = polygon.splits\nAlpaca.prototype.getNews = polygon.news\nAlpaca.prototype.getSymbol = polygon.getSymbol\n\nmodule.exports = Alpaca"]},"metadata":{},"sourceType":"script"}