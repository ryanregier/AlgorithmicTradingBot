{"ast":null,"code":"'use strict';\n\nconst request = require('request-promise');\n\nconst joinUrl = require('urljoin');\n\nfunction httpRequest(endpoint, queryParams, body, method) {\n  const {\n    baseUrl,\n    keyId,\n    secretKey,\n    apiVersion,\n    oauth\n  } = this.configuration;\n  return request({\n    method: method || 'GET',\n    uri: joinUrl(baseUrl, apiVersion, endpoint),\n    qs: queryParams || {},\n    headers: oauth !== '' ? {\n      'content-type': method !== 'DELETE' ? 'application/json' : undefined,\n      'Authorization': \"Bearer \" + oauth\n    } : {\n      'content-type': method !== 'DELETE' ? 'application/json' : undefined,\n      'APCA-API-KEY-ID': keyId,\n      'APCA-API-SECRET-KEY': secretKey\n    },\n    body: body || undefined,\n    json: true\n  });\n}\n\nfunction dataHttpRequest(endpoint, queryParams, body, method) {\n  const {\n    dataBaseUrl,\n    keyId,\n    secretKey,\n    oauth\n  } = this.configuration;\n  return request({\n    method: method || 'GET',\n    uri: joinUrl(dataBaseUrl, 'v1', endpoint),\n    qs: queryParams || {},\n    headers: oauth !== '' ? {\n      'content-type': method !== 'DELETE' ? 'application/json' : undefined,\n      'Authorization': \"Bearer \" + oauth\n    } : {\n      'content-type': method !== 'DELETE' ? 'application/json' : undefined,\n      'APCA-API-KEY-ID': keyId,\n      'APCA-API-SECRET-KEY': secretKey\n    },\n    body: body || undefined,\n    json: true\n  });\n}\n\nfunction polygonHttpRequest(endpoint, queryParams, body, method, apiVersion = 'v1') {\n  const {\n    baseUrl,\n    keyId,\n    polygonBaseUrl\n  } = this.configuration;\n  queryParams = queryParams || {};\n  queryParams['apiKey'] = keyId;\n\n  if (baseUrl.indexOf('staging') > -1) {\n    queryParams['staging'] = true;\n  }\n\n  return request({\n    method: method || 'GET',\n    uri: joinUrl(polygonBaseUrl, apiVersion, endpoint),\n    qs: queryParams || {},\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: body || undefined,\n    json: true\n  });\n}\n\nmodule.exports = {\n  httpRequest,\n  dataHttpRequest,\n  polygonHttpRequest\n};","map":{"version":3,"sources":["D:/Desktop - Data/School/Stock Bot/AlgorithmicTradingBot/frontend-server/node_modules/@alpacahq/alpaca-trade-api/lib/api.js"],"names":["request","require","joinUrl","httpRequest","endpoint","queryParams","body","method","baseUrl","keyId","secretKey","apiVersion","oauth","configuration","uri","qs","headers","undefined","json","dataHttpRequest","dataBaseUrl","polygonHttpRequest","polygonBaseUrl","indexOf","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst request = require('request-promise')\nconst joinUrl = require('urljoin')\n\nfunction httpRequest(endpoint, queryParams, body, method) {\n  const { baseUrl, keyId, secretKey, apiVersion, oauth } = this.configuration\n  return request({\n    method: method || 'GET',\n    uri: joinUrl(baseUrl, apiVersion, endpoint),\n    qs: queryParams || {},\n    headers: oauth !== '' ? {\n      'content-type': method !== 'DELETE' ? 'application/json' : undefined,\n      'Authorization': \"Bearer \" + oauth,\n    } : {\n        'content-type': method !== 'DELETE' ? 'application/json' : undefined,\n        'APCA-API-KEY-ID': keyId,\n        'APCA-API-SECRET-KEY': secretKey,\n      },\n    body: body || undefined,\n    json: true,\n  })\n}\n\nfunction dataHttpRequest(endpoint, queryParams, body, method) {\n  const { dataBaseUrl, keyId, secretKey, oauth } = this.configuration\n  return request({\n    method: method || 'GET',\n    uri: joinUrl(dataBaseUrl, 'v1', endpoint),\n    qs: queryParams || {},\n    headers: oauth !== '' ? {\n      'content-type': method !== 'DELETE' ? 'application/json' : undefined,\n      'Authorization': \"Bearer \" + oauth,\n    } : {\n        'content-type': method !== 'DELETE' ? 'application/json' : undefined,\n        'APCA-API-KEY-ID': keyId,\n        'APCA-API-SECRET-KEY': secretKey,\n      },\n    body: body || undefined,\n    json: true,\n  })\n}\n\nfunction polygonHttpRequest(endpoint, queryParams, body, method, apiVersion = 'v1') {\n  const { baseUrl, keyId, polygonBaseUrl } = this.configuration\n  queryParams = queryParams || {}\n  queryParams['apiKey'] = keyId\n  if (baseUrl.indexOf('staging') > -1) {\n    queryParams['staging'] = true\n  }\n  return request({\n    method: method || 'GET',\n    uri: joinUrl(polygonBaseUrl, apiVersion, endpoint),\n    qs: queryParams || {},\n    headers: {\n      'content-type': 'application/json',\n    },\n    body: body || undefined,\n    json: true,\n  })\n}\n\nmodule.exports = {\n  httpRequest,\n  dataHttpRequest,\n  polygonHttpRequest,\n}\n"]},"metadata":{},"sourceType":"script"}