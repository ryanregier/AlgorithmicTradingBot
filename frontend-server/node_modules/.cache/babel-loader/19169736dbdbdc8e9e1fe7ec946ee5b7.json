{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop - Data\\\\School\\\\Stock Bot\\\\AlgorithmicTradingBot\\\\frontend-server\\\\src\\\\components\\\\MainPage.js\",\n    _s = $RefreshSig$();\n\n//import logo from './logo.svg';\n//import './App.css';\nimport Header from './Header.js';\nimport React from 'react';\nimport Trades from \"./Trades\";\nimport AddTrade from \"./AddTrade\";\nimport { useState } from 'react';\nimport AplpacaFunctions from \"./alpacafunctions\";\nimport App from '../App';\nimport Button from './Buttons'; //import Images from './Images'\n//import im1 from '../Images/info1.jpg'\n// Class component\n// class App extends React.Component{\n//     render(){\n//         return <h1>Hello from a class</h1>\n//     }\n// }\n// //\n//Function compponent\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainPage() {\n  _s();\n\n  //This makes our list a part of the component and it is called the State.\n  //The list called tasks is no longer unchangable per say\n  //We cant dirrectly change it but we can use setTasks to recreate the list\n  const [trades, setTrades] = useState([{\n    id: 1,\n    sym: \"*Pic of Gamestop*\",\n    qty: \"A lot\",\n    side: \"left\",\n    type: \"Fire type\",\n    time_in_force: \"4 years\",\n    limit_price: \"just a bit\"\n  }, {\n    id: 2,\n    sym: \"*Pic of Walmart*\",\n    qty: \"Not a lot\",\n    side: \"right\",\n    type: \"water type\",\n    time_in_force: \"only two months\",\n    limit_price: \"No limit\"\n  }, {\n    id: 3,\n    sym: \":-)\",\n    qty: \"Almost none\",\n    side: \"West Side\",\n    type: \"Poison type\",\n    time_in_force: \"Whole life\",\n    limit_price: \"$100,000\"\n  }]); //piece of state\n\n  const [showAddTrade, setShowAskTrades] = useState(false); //addtask\n\n  const addTrade = task => {\n    const id = Math.floor(Math.random() * 1000) + 1; //Creat a new Trade Object\n\n    const newTask = {\n      id,\n      ...task\n    }; //update the task list\n\n    setTrades([...trades, newTask]); //Call the Alpaca Api function to initialise the trade\n  }; //Delete Trade\n\n\n  const deleteTrade = id => {\n    console.log('delete', id);\n    setTrades(trades.filter(task => task.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"divM\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Trades Queued\",\n        onAdd: () => setShowAskTrades(!showAddTrade),\n        showAdd: showAddTrade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), showAddTrade && /*#__PURE__*/_jsxDEV(AddTrade, {\n        onAdd: addTrade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 26\n      }, this), trades.length > 0 ? /*#__PURE__*/_jsxDEV(Trades, {\n        tasks: trades,\n        onDelete: deleteTrade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 30\n      }, this) : \"No Trades\", /*#__PURE__*/_jsxDEV(Button, {\n        color: \"green\",\n        text: \"Logout\",\n        onClick: App.Logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div2\", {\n      children: /*#__PURE__*/_jsxDEV(Images, {\n        image: im1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainPage, \"3ID+yBVKbf+fj7kzNe2F4Dkv4T0=\");\n\n_c = MainPage;\n\nconst LogoutButton = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: App.Logout,\n    style: {\n      backgroundColor: props.color\n    },\n    className: \"logoutbtn\",\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = LogoutButton;\nexport default MainPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MainPage\");\n$RefreshReg$(_c2, \"LogoutButton\");","map":{"version":3,"sources":["D:/Desktop - Data/School/Stock Bot/AlgorithmicTradingBot/frontend-server/src/components/MainPage.js"],"names":["Header","React","Trades","AddTrade","useState","AplpacaFunctions","App","Button","MainPage","trades","setTrades","id","sym","qty","side","type","time_in_force","limit_price","showAddTrade","setShowAskTrades","addTrade","task","Math","floor","random","newTask","deleteTrade","console","log","filter","length","Logout","im1","LogoutButton","props","backgroundColor","color","text"],"mappings":";;;AAAA;AACA;AACA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAsB,YAAtB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,gBAAP,MAA6B,mBAA7B;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAChB;AACA;AACA;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,CACjC;AACIO,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,GAAG,EAAE,mBAFT;AAGIC,IAAAA,GAAG,EAAE,OAHT;AAIIC,IAAAA,IAAI,EAAE,MAJV;AAKIC,IAAAA,IAAI,EAAE,WALV;AAMIC,IAAAA,aAAa,EAAE,SANnB;AAOIC,IAAAA,WAAW,EAAE;AAPjB,GADiC,EAUjC;AACIN,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,GAAG,EAAE,kBAFT;AAGIC,IAAAA,GAAG,EAAE,WAHT;AAIIC,IAAAA,IAAI,EAAE,OAJV;AAKIC,IAAAA,IAAI,EAAE,YALV;AAMIC,IAAAA,aAAa,EAAE,iBANnB;AAOIC,IAAAA,WAAW,EAAE;AAPjB,GAViC,EAmBjC;AACIN,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,GAAG,EAAE,KAFT;AAGIC,IAAAA,GAAG,EAAE,aAHT;AAIIC,IAAAA,IAAI,EAAE,WAJV;AAKIC,IAAAA,IAAI,EAAE,aALV;AAMIC,IAAAA,aAAa,EAAE,YANnB;AAOIC,IAAAA,WAAW,EAAE;AAPjB,GAnBiC,CAAD,CAApC,CALgB,CAoChB;;AACA,QAAM,CAACC,YAAD,EAAeC,gBAAf,IAAmCf,QAAQ,CAAC,KAAD,CAAjD,CArCgB,CAuChB;;AACA,QAAMgB,QAAQ,GAAIC,IAAD,IAAU;AACvB,UAAMV,EAAE,GAAGW,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,IAAzB,IAAgC,CAA3C,CADuB,CAEvB;;AACA,UAAMC,OAAO,GAAG;AAACd,MAAAA,EAAD;AAAK,SAAGU;AAAR,KAAhB,CAHuB,CAIvB;;AACAX,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAWgB,OAAX,CAAD,CAAT,CALuB,CAMvB;AAIH,GAVD,CAxCgB,CAoDhB;;;AACA,QAAMC,WAAW,GAAGf,EAAD,IAAQ;AACvBgB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBjB,EAAtB;AACAD,IAAAA,SAAS,CAACD,MAAM,CAACoB,MAAP,CAAeR,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYA,EAApC,CAAD,CAAT;AACH,GAHD;;AAIF,sBACE;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAG,eAAhB;AAAgC,QAAA,KAAK,EAAI,MAAMQ,gBAAgB,CAAC,CAACD,YAAF,CAA/D;AAAgF,QAAA,OAAO,EAAIA;AAA3F;AAAA;AAAA;AAAA;AAAA,cADJ,EAGKA,YAAY,iBAAI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAIE;AAAnB;AAAA;AAAA;AAAA;AAAA,cAHrB,EAIKX,MAAM,CAACqB,MAAP,GAAgB,CAAhB,gBAAoB,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAIrB,MAAjB;AACQ,QAAA,QAAQ,EAAIiB;AADpB;AAAA;AAAA;AAAA;AAAA,cAApB,GAEI,WANT,eAOI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAI,OAAjB;AAA0B,QAAA,IAAI,EAAI,QAAlC;AAA4C,QAAA,OAAO,EAAIpB,GAAG,CAACyB;AAA3D;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAUA;AAAA,6BACK,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAIC;AAAjB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAzEQxB,Q;;KAAAA,Q;;AA2ET,MAAMyB,YAAY,GAAIC,KAAD,IAAU;AAC3B,sBACI;AAAQ,IAAA,OAAO,EAAI5B,GAAG,CAACyB,MAAvB;AAA+B,IAAA,KAAK,EAAI;AAACI,MAAAA,eAAe,EAAGD,KAAK,CAACE;AAAzB,KAAxC;AACQ,IAAA,SAAS,EAAG,WADpB;AAAA,cAECF,KAAK,CAACG;AAFP;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAPD;;MAAMJ,Y;AASN,eAAezB,QAAf","sourcesContent":["//import logo from './logo.svg';\r\n//import './App.css';\r\nimport Header from './Header.js'\r\nimport React from 'react'\r\nimport Trades from \"./Trades\"\r\nimport AddTrade  from \"./AddTrade\"\r\nimport {useState} from 'react'\r\nimport AplpacaFunctions from \"./alpacafunctions\"\r\nimport App from '../App'\r\nimport Button from './Buttons'\r\n//import Images from './Images'\r\n\r\n//import im1 from '../Images/info1.jpg'\r\n\r\n// Class component\r\n// class App extends React.Component{\r\n//     render(){\r\n//         return <h1>Hello from a class</h1>\r\n//     }\r\n// }\r\n// //\r\n//Function compponent\r\nfunction MainPage() {\r\n    //This makes our list a part of the component and it is called the State.\r\n    //The list called tasks is no longer unchangable per say\r\n    //We cant dirrectly change it but we can use setTasks to recreate the list\r\n\r\n    const [trades, setTrades] = useState([\r\n        {\r\n            id: 1,\r\n            sym: \"*Pic of Gamestop*\",\r\n            qty: \"A lot\",\r\n            side: \"left\",\r\n            type: \"Fire type\",\r\n            time_in_force: \"4 years\",\r\n            limit_price: \"just a bit\"\r\n        },\r\n        {\r\n            id: 2,\r\n            sym: \"*Pic of Walmart*\",\r\n            qty: \"Not a lot\",\r\n            side: \"right\",\r\n            type: \"water type\",\r\n            time_in_force: \"only two months\",\r\n            limit_price: \"No limit\"\r\n        },\r\n        {\r\n            id: 3,\r\n            sym: \":-)\",\r\n            qty: \"Almost none\",\r\n            side: \"West Side\",\r\n            type: \"Poison type\",\r\n            time_in_force: \"Whole life\",\r\n            limit_price: \"$100,000\"\r\n        },\r\n\r\n    ])\r\n\r\n    //piece of state\r\n    const [showAddTrade, setShowAskTrades] = useState(false)\r\n\r\n    //addtask\r\n    const addTrade = (task) => {\r\n        const id = Math.floor(Math.random()*1000) +1\r\n        //Creat a new Trade Object\r\n        const newTask = {id, ...task}\r\n        //update the task list\r\n        setTrades([...trades,newTask])\r\n        //Call the Alpaca Api function to initialise the trade\r\n\r\n\r\n\r\n    }\r\n\r\n    //Delete Trade\r\n    const deleteTrade= (id) => {\r\n        console.log('delete', id)\r\n        setTrades(trades.filter((task) => task.id !== id))\r\n    }\r\n  return (\r\n    <divM>\r\n    <div className=\"container\">\r\n        <Header title = \"Trades Queued\" onAdd = {() => setShowAskTrades(!showAddTrade)} showAdd = {showAddTrade}/>\r\n        {/* && is basical ? : with out an else wich is and if else statement*/}\r\n        {showAddTrade && <AddTrade onAdd = {addTrade} />}\r\n        {trades.length > 0 ? <Trades tasks = {trades}\r\n                                     onDelete = {deleteTrade}\r\n        /> : \"No Trades\"}\r\n        <Button color = {\"green\"} text = {\"Logout\"} onClick = {App.Logout}/>\r\n    </div>\r\n    <div2>\r\n         <Images image = {im1}/>\r\n    </div2>\r\n    </divM>\r\n  )\r\n}\r\n\r\nconst LogoutButton = (props) =>{\r\n    return (\r\n        <button onClick = {App.Logout} style = {{backgroundColor : props.color}}\r\n                className = \"logoutbtn\">\r\n        {props.text}\r\n    </button>\r\n    )\r\n}\r\n\r\nexport default MainPage;"]},"metadata":{},"sourceType":"module"}